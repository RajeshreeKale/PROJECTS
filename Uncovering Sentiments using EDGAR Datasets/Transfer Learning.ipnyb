{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Transfer Learning.ipnyb","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"metadata":{"id":"G0iy5rDj34jk","colab_type":"text"},"cell_type":"markdown","source":["## Transfer Learning Using IMDB movie review dataset\n","\n","* Word Embedding\n","* Recurrent Neural Network"]},{"metadata":{"id":"414uTrALlpkz","colab_type":"code","outputId":"68f4746f-ba7b-4d80-b9b8-ba4327e2fc74","executionInfo":{"status":"ok","timestamp":1553193034452,"user_tz":240,"elapsed":1982,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["from __future__ import absolute_import, division, print_function\n","\n","import tensorflow as tf\n","from tensorflow import keras\n","from keras.preprocessing.text import Tokenizer\n","from keras.preprocessing.sequence import pad_sequences\n","import pandas as pd\n","import numpy as np\n","import itertools\n","from keras.preprocessing import text, sequence\n","from keras import preprocessing\n","from keras import utils\n","from sklearn.preprocessing import LabelBinarizer, LabelEncoder\n","from keras.layers import Dense, Activation, Dropout\n","from tensorflow.keras.callbacks import EarlyStopping\n","from keras.models import Sequential\n","%matplotlib inline\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix\n","import itertools\n","from keras import utils\n","from keras.models import Sequential\n","from keras.layers import Embedding, SimpleRNN"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"}]},{"metadata":{"id":"WRYGsj-FX7tl","colab_type":"text"},"cell_type":"markdown","source":["## Importing IMDB dataset and splitting into training and testing"]},{"metadata":{"id":"F7DBnB33lq2u","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"outputId":"3ace1c08-3c4a-4783-e543-9208b11248fa","executionInfo":{"status":"ok","timestamp":1553193044871,"user_tz":240,"elapsed":7450,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}}},"cell_type":"code","source":["imdb = keras.datasets.imdb\n","\n","(train_data, train_labels), (test_data, test_labels) = imdb.load_data()"],"execution_count":2,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/imdb.npz\n","17465344/17464789 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"metadata":{"id":"CFLhJLjSYCbD","colab_type":"text"},"cell_type":"markdown","source":["## Total Number of reviews"]},{"metadata":{"id":"UPhKeJyol32m","colab_type":"code","outputId":"bbff0337-90d2-45ea-bc21-8a449bdf1c9a","executionInfo":{"status":"ok","timestamp":1553193046325,"user_tz":240,"elapsed":530,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["print(\"Training entries: {}, labels: {}\".format(len(train_data), len(train_labels)))"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Training entries: 25000, labels: 25000\n"],"name":"stdout"}]},{"metadata":{"id":"jsp5GJuQYNRa","colab_type":"text"},"cell_type":"markdown","source":["## Data preprocessing"]},{"metadata":{"id":"39BYBv7Gl7K2","colab_type":"code","outputId":"57a501fd-b7fa-4a42-ce03-735237730623","executionInfo":{"status":"ok","timestamp":1553193050375,"user_tz":240,"elapsed":1116,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":50}},"cell_type":"code","source":["word_index = imdb.get_word_index()\n","\n","# The first indices are reserved\n","word_index = {k:(v+3) for k,v in word_index.items()} \n","word_index[\"<PAD>\"] = 0\n","word_index[\"<START>\"] = 1\n","word_index[\"<UNK>\"] = 2  # unknown\n","word_index[\"<UNUSED>\"] = 3\n","\n","reverse_word_index = dict([(value, key) for (key, value) in word_index.items()])\n","\n","def decode_review(text):\n","    return ' '.join([reverse_word_index.get(i, '?') for i in text])"],"execution_count":4,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/imdb_word_index.json\n","1646592/1641221 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"metadata":{"id":"pvygIuv4mAbN","colab_type":"code","colab":{}},"cell_type":"code","source":["train_data = keras.preprocessing.sequence.pad_sequences(train_data,\n","                                                        value=word_index[\"<PAD>\"],\n","                                                        padding='post',\n","                                                        maxlen=256)\n","\n","test_data = keras.preprocessing.sequence.pad_sequences(test_data,\n","                                                       value=word_index[\"<PAD>\"],\n","                                                       padding='post',\n","                                                       maxlen=256)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"JtB6p8ayZTz2","colab_type":"text"},"cell_type":"markdown","source":["## Model Designing"]},{"metadata":{"id":"wGdhvcM5mEla","colab_type":"code","outputId":"c5287bc7-197e-4f28-9291-002ff28de97c","executionInfo":{"status":"ok","timestamp":1553193227704,"user_tz":240,"elapsed":607,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":269}},"cell_type":"code","source":["vocab_size = 10000\n","max_words = 256\n","model = keras.Sequential()\n","model.add(keras.layers.Embedding(vocab_size, 16,input_length=max_words))\n","model.add(keras.layers.GlobalAveragePooling1D())\n","model.add(keras.layers.Dense(16, activation=tf.nn.relu))\n","model.add(keras.layers.Dense(1, activation=tf.nn.sigmoid))\n","\n","model.summary()"],"execution_count":24,"outputs":[{"output_type":"stream","text":["_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","embedding_4 (Embedding)      (None, 256, 16)           160000    \n","_________________________________________________________________\n","global_average_pooling1d_4 ( (None, 16)                0         \n","_________________________________________________________________\n","dense_12 (Dense)             (None, 16)                272       \n","_________________________________________________________________\n","dense_13 (Dense)             (None, 1)                 17        \n","=================================================================\n","Total params: 160,289\n","Trainable params: 160,289\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"metadata":{"id":"IZT3Xf_bmIxs","colab_type":"code","colab":{}},"cell_type":"code","source":["model.compile(optimizer='rmsprop',\n","              loss='binary_crossentropy',\n","              metrics=['acc'])"],"execution_count":0,"outputs":[]},{"metadata":{"id":"E8dNWdG8mMDZ","colab_type":"code","colab":{}},"cell_type":"code","source":["x_val = train_data[:10000]\n","partial_x_train = train_data[10000:]\n","\n","y_val = train_labels[:10000]\n","partial_y_train = train_labels[10000:]"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Xfir0V5oZXge","colab_type":"text"},"cell_type":"markdown","source":["### Model Training"]},{"metadata":{"id":"d7okTFvJmO2k","colab_type":"code","outputId":"3c95ae5c-8541-4502-c3a6-4f83732d3f5b","executionInfo":{"status":"ok","timestamp":1553193241827,"user_tz":240,"elapsed":9795,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":1109}},"cell_type":"code","source":["history = model.fit(partial_x_train,\n","                    partial_y_train,\n","                    epochs=32,\n","                    batch_size=512,\n","                    validation_data=(x_val, y_val),\n","                    verbose=1)"],"execution_count":26,"outputs":[{"output_type":"stream","text":["Train on 15000 samples, validate on 10000 samples\n","Epoch 1/32\n","15000/15000 [==============================] - 0s 31us/sample - loss: 0.6908 - acc: 0.5570 - val_loss: 0.6874 - val_acc: 0.6492\n","Epoch 2/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.6639 - acc: 0.6329 - val_loss: 0.6140 - val_acc: 0.6795\n","Epoch 3/32\n","15000/15000 [==============================] - 0s 18us/sample - loss: 0.5966 - acc: 0.6986 - val_loss: 0.5431 - val_acc: 0.7422\n","Epoch 4/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.5214 - acc: 0.7547 - val_loss: 0.5054 - val_acc: 0.7620\n","Epoch 5/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.4740 - acc: 0.7879 - val_loss: 0.4632 - val_acc: 0.7926\n","Epoch 6/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.4274 - acc: 0.8158 - val_loss: 0.4423 - val_acc: 0.8016\n","Epoch 7/32\n","15000/15000 [==============================] - 0s 18us/sample - loss: 0.4070 - acc: 0.8244 - val_loss: 0.4336 - val_acc: 0.8046\n","Epoch 8/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3966 - acc: 0.8272 - val_loss: 0.4303 - val_acc: 0.8077\n","Epoch 9/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3904 - acc: 0.8307 - val_loss: 0.4272 - val_acc: 0.8084\n","Epoch 10/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3865 - acc: 0.8321 - val_loss: 0.4248 - val_acc: 0.8123\n","Epoch 11/32\n","15000/15000 [==============================] - 0s 19us/sample - loss: 0.4680 - acc: 0.7968 - val_loss: 0.5051 - val_acc: 0.7753\n","Epoch 12/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.4392 - acc: 0.8022 - val_loss: 0.4592 - val_acc: 0.7961\n","Epoch 13/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.4036 - acc: 0.8219 - val_loss: 0.4389 - val_acc: 0.8059\n","Epoch 14/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.4262 - acc: 0.8210 - val_loss: 0.4788 - val_acc: 0.7842\n","Epoch 15/32\n","15000/15000 [==============================] - 0s 18us/sample - loss: 0.3877 - acc: 0.8300 - val_loss: 0.4187 - val_acc: 0.8177\n","Epoch 16/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3585 - acc: 0.8477 - val_loss: 0.4056 - val_acc: 0.8245\n","Epoch 17/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3402 - acc: 0.8575 - val_loss: 0.3929 - val_acc: 0.8340\n","Epoch 18/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3240 - acc: 0.8641 - val_loss: 0.4054 - val_acc: 0.8311\n","Epoch 19/32\n","15000/15000 [==============================] - 0s 18us/sample - loss: 0.3119 - acc: 0.8717 - val_loss: 0.3768 - val_acc: 0.8403\n","Epoch 20/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3031 - acc: 0.8764 - val_loss: 0.3853 - val_acc: 0.8338\n","Epoch 21/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.4322 - acc: 0.8470 - val_loss: 0.7477 - val_acc: 0.7076\n","Epoch 22/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.5452 - acc: 0.7642 - val_loss: 0.5326 - val_acc: 0.7584\n","Epoch 23/32\n","15000/15000 [==============================] - 0s 18us/sample - loss: 0.4524 - acc: 0.7965 - val_loss: 0.4891 - val_acc: 0.7759\n","Epoch 24/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.4146 - acc: 0.8151 - val_loss: 0.4619 - val_acc: 0.7855\n","Epoch 25/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3906 - acc: 0.8305 - val_loss: 0.4383 - val_acc: 0.7991\n","Epoch 26/32\n","15000/15000 [==============================] - 0s 18us/sample - loss: 0.3780 - acc: 0.8362 - val_loss: 0.4301 - val_acc: 0.8033\n","Epoch 27/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3701 - acc: 0.8413 - val_loss: 0.4242 - val_acc: 0.8096\n","Epoch 28/32\n","15000/15000 [==============================] - 0s 18us/sample - loss: 0.3647 - acc: 0.8436 - val_loss: 0.4222 - val_acc: 0.8102\n","Epoch 29/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3709 - acc: 0.8404 - val_loss: 0.4447 - val_acc: 0.7992\n","Epoch 30/32\n","15000/15000 [==============================] - 0s 18us/sample - loss: 0.3404 - acc: 0.8531 - val_loss: 0.4015 - val_acc: 0.8212\n","Epoch 31/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3218 - acc: 0.8632 - val_loss: 0.3840 - val_acc: 0.8300\n","Epoch 32/32\n","15000/15000 [==============================] - 0s 17us/sample - loss: 0.3146 - acc: 0.8668 - val_loss: 1.8422 - val_acc: 0.5931\n"],"name":"stdout"}]},{"metadata":{"id":"dQfRsDkN4Grm","colab_type":"text"},"cell_type":"markdown","source":["## The accuracy score on out of sample data "]},{"metadata":{"id":"LsiitZtnmRSS","colab_type":"code","outputId":"2a83205e-cdc2-4a45-9e9b-45ac56de61c8","executionInfo":{"status":"ok","timestamp":1553193246978,"user_tz":240,"elapsed":1933,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":50}},"cell_type":"code","source":["results = model.evaluate(test_data, test_labels)\n","print(results)"],"execution_count":27,"outputs":[{"output_type":"stream","text":["25000/25000 [==============================] - 2s 62us/sample - loss: 1.8371 - acc: 0.5930\n","[1.8371118324661255, 0.593]\n"],"name":"stdout"}]},{"metadata":{"id":"sKZBeiIUmd4D","colab_type":"code","outputId":"0aa33b92-3122-4216-fc5b-f63abe2e97ba","executionInfo":{"status":"ok","timestamp":1553029420465,"user_tz":240,"elapsed":11737,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":294}},"cell_type":"code","source":["import matplotlib.pyplot as plt\n","history_dict = history.history\n","acc = history_dict['acc']\n","val_acc = history_dict['val_acc']\n","loss = history_dict['loss']\n","val_loss = history_dict['val_loss']\n","\n","epochs = range(1, len(acc) + 1)\n","\n","# \"bo\" is for \"blue dot\"\n","plt.plot(epochs, loss, 'bo', label='Training loss')\n","# b is for \"solid blue line\"\n","plt.plot(epochs, val_loss, 'b', label='Validation loss')\n","plt.title('Training and validation loss')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend()\n","\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"8i376pFWmj7O","colab_type":"code","outputId":"15812555-815e-40c3-8174-a6fc4e0eb8eb","executionInfo":{"status":"ok","timestamp":1553029420879,"user_tz":240,"elapsed":10532,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":294}},"cell_type":"code","source":["plt.clf()   # clear figure\n","\n","plt.plot(epochs, acc, 'bo', label='Training acc')\n","plt.plot(epochs, val_acc, 'b', label='Validation acc')\n","plt.title('Training and validation accuracy')\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend()\n","\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nEBEJqP8PiueinRIAGakAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"PFov5TBI4Ump","colab_type":"text"},"cell_type":"markdown","source":["## Importing EDGAR dataset \n","\n","Transfer Learning using Word2Vec"]},{"metadata":{"id":"uYLYs13xpa-w","colab_type":"code","outputId":"07a930e7-2263-445e-fab6-c00b41d6e8f2","executionInfo":{"status":"ok","timestamp":1553196666413,"user_tz":240,"elapsed":785,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["json_df=pd.read_json(\"cleanedDataset.json\")\n","json_df.shape"],"execution_count":62,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1535, 2)"]},"metadata":{"tags":[]},"execution_count":62}]},{"metadata":{"id":"klFyn-69qTey","colab_type":"code","outputId":"d42993e7-6625-476e-a7fb-471808513fce","executionInfo":{"status":"ok","timestamp":1553196668118,"user_tz":240,"elapsed":924,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":84}},"cell_type":"code","source":["json_df['sentiment'].value_counts()"],"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Neutral     780\n","Positive    608\n","Negative    147\n","Name: sentiment, dtype: int64"]},"metadata":{"tags":[]},"execution_count":63}]},{"metadata":{"id":"4QkNq7Oo5Ukf","colab_type":"text"},"cell_type":"markdown","source":["## Data preparation "]},{"metadata":{"id":"g6GVcYqD4nhB","colab_type":"text"},"cell_type":"markdown","source":["IMDB dataset contains only positive and negative sentiments.\n","So we'll remove all the neutral sentiments from the EDGAR dataset."]},{"metadata":{"id":"MYJMV8pQlnQI","colab_type":"code","outputId":"8c0185c7-0719-4763-ba26-b10e7eb55e75","executionInfo":{"status":"ok","timestamp":1553196703256,"user_tz":240,"elapsed":1682,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":50}},"cell_type":"code","source":["json_df = json_df[json_df['sentiment'] != 'Neutral']\n","json_df['sentiment'] = json_df['sentiment'].apply(lambda x: 0 if x == 'Negative' else 1)\n","train_size = int(len(json_df) * .8)\n","print (\"Train size: %d\" % train_size)\n","print (\"Test size: %d\" % (len(json_df) - train_size))"],"execution_count":64,"outputs":[{"output_type":"stream","text":["Train size: 604\n","Test size: 151\n"],"name":"stdout"}]},{"metadata":{"id":"3l4T8w8uxWG3","colab_type":"code","outputId":"0a00c34c-62b2-451e-f5c1-7e9c77f73394","executionInfo":{"status":"ok","timestamp":1553196755463,"user_tz":240,"elapsed":575,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":67}},"cell_type":"code","source":["json_df['sentiment'].value_counts()"],"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1    608\n","0    147\n","Name: sentiment, dtype: int64"]},"metadata":{"tags":[]},"execution_count":65}]},{"metadata":{"id":"VLkpBLPyvm3F","colab_type":"code","colab":{}},"cell_type":"code","source":["train_posts = json_df['text'][:train_size]\n","train_tags = json_df['sentiment'][:train_size]\n","\n","test_posts = json_df['text'][train_size:]\n","test_tags = json_df['sentiment'][train_size:]"],"execution_count":0,"outputs":[]},{"metadata":{"id":"dbBj_peu0_o_","colab_type":"code","colab":{}},"cell_type":"code","source":["json_lables = json_df['sentiment']\n","json_text = json_df['text']"],"execution_count":0,"outputs":[]},{"metadata":{"id":"YqJXJpie10UT","colab_type":"code","colab":{}},"cell_type":"code","source":["maxlen = 256\n","tokenizer = Tokenizer()\n","testing_sequences = tokenizer.texts_to_sequences(json_text)\n","testing_sequences = preprocessing.sequence.pad_sequences(testing_sequences, maxlen=maxlen)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"XWqyL-RlqYNT","colab_type":"code","colab":{}},"cell_type":"code","source":["max_words = 256\n","tokenize = text.Tokenizer(num_words=max_words, char_level=False)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"_Hc92LBJqenl","colab_type":"code","colab":{}},"cell_type":"code","source":["tokenize.fit_on_texts(train_posts) # only fit on train\n","x_train = tokenize.texts_to_matrix(train_posts)\n","x_test = tokenize.texts_to_matrix(test_posts)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"uRF5DOWHqmoK","colab_type":"code","colab":{}},"cell_type":"code","source":["batch_size = 26\n","epoch = 75"],"execution_count":0,"outputs":[]},{"metadata":{"id":"s-QxZZUL6P8c","colab_type":"text"},"cell_type":"markdown","source":["## Checking the accuracy of pre-trained model on EDGAR dataset"]},{"metadata":{"id":"EYWY1i_90GTD","colab_type":"code","outputId":"feceb94a-0e84-4999-8e18-038ae62d6f07","executionInfo":{"status":"ok","timestamp":1553031588305,"user_tz":240,"elapsed":656,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":67}},"cell_type":"code","source":["score = model.evaluate(testing_sequences, json_lables,\n","                       batch_size=batch_size, verbose=1)\n","print('Test score:', score[0])\n","print('Test accuracy:', score[1])"],"execution_count":0,"outputs":[{"output_type":"stream","text":["755/755 [==============================] - 0s 106us/sample - loss: 0.6429 - acc: 0.8053\n","Test score: 0.6429024931610815\n","Test accuracy: 0.80529803\n"],"name":"stdout"}]},{"metadata":{"id":"cHvS417eAI5l","colab_type":"text"},"cell_type":"markdown","source":["## Transfer Learning using RNN\n","\n","Training the model initially on IMDB movie review dataset"]},{"metadata":{"id":"saFUgsX6AXmC","colab_type":"code","colab":{}},"cell_type":"code","source":["max_words = 256\n","tokenize = text.Tokenizer(num_words=max_words, char_level=False)\n","max_features = 10000\n","#del max_features"],"execution_count":0,"outputs":[]},{"metadata":{"id":"VdWfTttcbDEf","colab_type":"text"},"cell_type":"markdown","source":["## Model Designing"]},{"metadata":{"id":"tTOHUu-4Arc0","colab_type":"code","outputId":"78764ba3-8162-453e-cec3-dc1fb4966867","executionInfo":{"status":"ok","timestamp":1553044437110,"user_tz":240,"elapsed":126494,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":168}},"cell_type":"code","source":["from keras.layers import Dense\n","\n","model = Sequential()\n","model.add(Embedding(max_features, 32,input_length=max_words))\n","model.add(SimpleRNN(32))\n","model.add(Dense(1, activation='tanh'))\n","\n","model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['acc'])\n","history = model.fit(partial_x_train,\n","                    partial_y_train,\n","                    epochs=32,\n","                    batch_size=128,\n","                    validation_data=(x_val, y_val),\n","                    verbose=1,\n","                   callbacks=[EarlyStopping(patience=3)])"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Train on 15000 samples, validate on 10000 samples\n","Epoch 1/32\n","15000/15000 [==============================] - 33s 2ms/step - loss: 0.7254 - acc: 0.5073 - val_loss: 0.6900 - val_acc: 0.5161\n","Epoch 2/32\n","15000/15000 [==============================] - 31s 2ms/step - loss: 0.6257 - acc: 0.6081 - val_loss: 0.7149 - val_acc: 0.5301\n","Epoch 3/32\n","15000/15000 [==============================] - 31s 2ms/step - loss: 0.5228 - acc: 0.6619 - val_loss: 0.8827 - val_acc: 0.5318\n","Epoch 4/32\n","15000/15000 [==============================] - 31s 2ms/step - loss: 0.4764 - acc: 0.6611 - val_loss: 1.0186 - val_acc: 0.5338\n"],"name":"stdout"}]},{"metadata":{"id":"rLZ7iPsn6gjc","colab_type":"text"},"cell_type":"markdown","source":["## Testing accuracy of pre-trained recurrent neural network model on EDGAR dataset"]},{"metadata":{"id":"J-geaHm3EkX_","colab_type":"code","outputId":"be78d31e-5f5f-4791-c395-d8f4baa0768b","executionInfo":{"status":"ok","timestamp":1553044547579,"user_tz":240,"elapsed":3890,"user":{"displayName":"Parag Bhingarkar","photoUrl":"https://lh4.googleusercontent.com/-BaOW_Od4ELo/AAAAAAAAAAI/AAAAAAAABWI/ajDDA_XT-Cw/s64/photo.jpg","userId":"00959156150467841460"}},"colab":{"base_uri":"https://localhost:8080/","height":67}},"cell_type":"code","source":["score = model.evaluate(testing_sequences, json_lables,\n","                       batch_size=batch_size, verbose=1)\n","print('Test score using EDGAR:', score[0])\n","print('Test accuracy using EDGAR:', score[1])"],"execution_count":0,"outputs":[{"output_type":"stream","text":["755/755 [==============================] - 3s 4ms/step\n","Test score using EDGAR: 0.5519951596560068\n","Test accuracy using EDGAR: 0.8052980104819039\n"],"name":"stdout"}]}]}